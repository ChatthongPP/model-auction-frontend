"use client";
import { useSearchParams } from "next/navigation";
import { useEffect, useState } from "react";

interface ProductDetail {
  id: number;
  name: string;
  description: string;
  price: number;
  images: string[];
  seller: string;
  bidHistory: { user: string; price: number; time: string }[];
}

export default function ProductDetailPage() {
  const searchParams = useSearchParams();
  const productId = parseInt(searchParams.get("id") || "1", 10);

  const [product, setProduct] = useState<ProductDetail | null>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    async function fetchProduct() {
      setLoading(true);
      try {
        const res = await fetch("/api/products"); // üîó ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        const data: ProductDetail[] = await res.json();
        const foundProduct = data.find((item) => item.id === productId);
        setProduct(foundProduct || null);
      } catch (error) {
        console.error("Failed to fetch product:", error);
        setProduct(null);
      } finally {
        setLoading(false);
      }
    }

    fetchProduct();
  }, [productId]);

  if (loading) return <p className="text-white text-center mt-10">Loading...</p>;
  if (!product)
    return (
      <p className="text-red-400 text-center mt-10">
        ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
      </p>
    );

  return (
    <div className="max-w-5xl mx-auto px-6 py-10 text-white">
      <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
        {/* ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
        <div>
          <img
            src={product.images[0]}
            alt={product.name}
            className="w-full h-auto rounded-xl border border-gray-600"
          />
          <div className="flex mt-4 gap-2">
            {product.images.map((img, i) => (
              <img
                key={i}
                src={img}
                alt={`thumb-${i}`}
                className="w-16 h-16 object-cover rounded border"
              />
            ))}
          </div>
        </div>

        {/* ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
        <div>
          <h1 className="text-3xl font-bold mb-2">{product.name}</h1>
          <p className="text-[#f4c2c2] font-bold text-xl mb-4">
            ‡∏ø{product.price.toLocaleString()}
          </p>
          <p className="text-gray-300 mb-4">{product.description}</p>

          <div className="mb-4">
            <p>
              <span className="font-semibold">‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢:</span> {product.seller}
            </p>
            <p>
              <span className="font-semibold">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</span>{" "}
              <span className="text-green-400">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•</span>
            </p>
          </div>

          <button className="mt-4 px-6 py-2 bg-[#8e44ad] text-white rounded hover:bg-purple-700 transition">
            ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•
          </button>
        </div>
      </div>

      {/* ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏• */}
      <div className="mt-12 bg-[#2d1a48] p-6 rounded-xl">
        <h2 className="text-2xl font-semibold mb-4">‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•</h2>
        <div className="space-y-2">
          {product.bidHistory.map((bid, idx) => (
            <div
              key={idx}
              className="flex justify-between border-b border-gray-600 pb-2"
            >
              <span>{bid.user}</span>
              <span>‡∏ø{bid.price.toLocaleString()}</span>
              <span className="text-sm text-gray-400">{bid.time}</span>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
}
